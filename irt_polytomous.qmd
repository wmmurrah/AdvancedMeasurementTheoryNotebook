---
title: "Item Response Theory for Polytomous Items"
bibliography: references.bib
---

## Chapter Overview

### Dichotomous vs Polytomous Items

So far we have required that responses be dichotomous (or scored dichotomously). This could be correct (1) and incorrect(0) or endorse (1) and not endorse (0).
Which of the following items are dichotomous and which are polytomous?

```
1. Which of the following is an example of a chemical reaction?    
  A. A rainbow    (0)  
  B. Lightning    (0)  
  C. Burning wood (1)  
  D. Melting snow (0)  

2. I have dropped many of my interests and activities.   
  A. Agree    (1)   
  B. Disagree (0)   

3. On the whole, I am satisfied with myself.    
  A. Strongly Agree    (3)  
  B. Agree             (2)
  C. Disagree          (1)
  D. Strongly Disagree (0)
```

The third item is polytomous, because this item cannot be scored as either endorsed or not endorsed. Instead the Likert scaling are aimed at determining level of endorsement.

In this chapter we will consider a number of models for instruments with polytomous items. These will consist of polytomous Rasch models for ordinal items, polytomous non-Rasch models for ordinal items, and polytomous models for nominal models.

### Data Example: The Rosenberg Self-Esteem Scale

For most of the examples in this chapter we will use the data from the Roseberg Self-Esteem Scale. This data entitled `rse` is part of the `hemp` package and can be loaded, along with the needed packages, as follows.

```{r}
#| message: false
library(hemp)
library(mirt)
data(rse)
```
Below is information that can be obtained in the help file for this data (e.g. typing `?rse` in the console after the `hemp` package is loaded).

#### Description

The RSE data set was obtained via online with an interactive version of the Rosenberg Self-Esteem Scale (Rosenberg, 1965). Individuals were informed at the start of the test that their data would be saved. When they completed the scale, they were asked to confirm that the responses they had given were accurate and could be used for research, only those who confirmed are included in this dataset. A random sample of 1000 participants who completed all of the items in the scale were included in the RSE data set. All of the 10 rating scale items were rated on a 4-point scale (i.e., 1=strongly disagree, 2=disagree, 3=agree, and 4=strongly agree). Items 3, 5, 8, 9 and 10 were reversed-coded in order to place all the items in the same direction. That is, higher scores indicate higher self-esteem.

#### Format

A data frame with 1000 participants who responded to 10 rating scale items in an interactive version of the Rosenberg Self-Esteem Scale (Rosenberg, 1965). There are also additional demographic items about the participants:

#### Questions

Question | Description
----|------|
Q1 | I feel that I am a person of worth, at least on an equal plane with others.
Q2 | I feel that I have a number of good qualities.
Q3* | All in all, I am inclined to feel that I am a failure.
Q4 | I am able to do things as well as most other people.
Q5* | I feel I do not have much to be proud of.
Q6 | I take a positive attitude toward myself.
Q7 | On the whole, I am satisfied with myself.
Q8* | I wish I could have more respect for myself.
Q9* | I certainly feel useless at times.
Q10* | At times, I think I am no good at all.
gender | Chosen from a drop down list (1=male, 2=female, 3=other; 0=none was chosen)
age | Entered as a free response. (0=response that could not be converted to integer)
source | How the user came to the web page of the RSE scale (1=Front page of personality website, 2=Google search, 3=other)
country | Inferred from technical information using MaxMind GeoLite
person | Participant identifier

: Rosenberg Self-Esteem Scale Questions {#tbl-qs}

Note: * = indicates a reverse coded item.

#### Source

The The Rosenberg Self-Esteem Scale is available at http://personality-testing.info/tests/RSE.php.

#### Exploring `rse` Date

```{r}
round(cor(rse[ ,1:10]),2)
```

```{r}
heatmap(cor(rse[ ,1:10]), )
```

## Polytomous Rasch Models for Ordinal Items

### Partial Credit Model


$$
P(X_i | \theta, \delta_{ih}) = \frac{exp[\Sigma_{h=0}^{x_i}(\theta - \delta_{ih})]}{\Sigma_{k=0}^{m_i} exp[\Sigma_{h=0}^{k}(\theta - \delta_{ih})]}
$$ {#eq-pcm}

* $\theta$ is the latent trait
* $\delta_{ih}$ is the step parameter (and difficulty) that represents obtaining $h$ points over $h - 1$ points.
* $m_i$ is the maximum response category
* 
The probability of obtaining $X_i$ points, where $X_i = 0, 1,..., m_i$


```{r}
pcm_mod <- "selfesteem = 1 - 10"
pcm_fit <- mirt(data = rse[ ,1:10], 
                model = pcm_mod,
                itemtype = "Rasch", SE = TRUE,
                verbose = FALSE) # suppress messages
pcm_params <- coef(pcm_fit, IRTpars = TRUE,
                   simplify = TRUE)
```

```{r}
pcm_items <- pcm_params$items
pcm_items
```

```{r}
plot(pcm_fit, type = "trace", which.items = c(2,5),
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```


```{r}
plot(pcm_fit, type = "infotrace", which.items = c(2,5), 
     par.settings = simpleTheme(lwd = 2))
```

```{r}
plot(pcm_fit, type = "infotrace", 
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```
```{r}
plot(pcm_fit, type = "infotrace", facet_items = FALSE,
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```


```{r}
plot(pcm_fit, type = "info", 
     par.settings = simpleTheme(lwd = 2))
```

### Rating Scale Model

The rating scale model (RSM) is a restricted version of the PCM, where all items are constrained to have the same form. This is common for Likert scale instruments.


$$
P(X_i | \theta,\lambda_i,  \delta_1,...\delta_m) = \frac{exp[\Sigma_{j=0}^{c}(\theta - (\lambda_i +  \delta_{j})]}{\Sigma_{h=0}^{m} exp[\Sigma_{j=0}^{h}(\theta - (\lambda_i + \delta_{j}))]}
$$

```{r}
rsm_mod <- "selfesteem = 1 - 10"
rsm_fit <- mirt(data = rse[ ,1:10], model = rsm_mod,
                itemtype = "rsm")
rsm_params <- coef(rsm_fit, simplify = TRUE)
rsm_items <- as.data.frame(rsm_params$items)
rsm_items
```

```{r}
plot(rsm_fit, type = "trace", which.items = c(2, 9), 
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```


```{r}
plot(rsm_fit, type = "trace", facet = FALSE, 
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 2))
```

![](images/rsm_threshhold.png)

## Polytomous Non-Rasch Models for Ordinal Items

There are two models that can be viewed as polytomous versions of the 2PL IRT model, the **generalized partial credit model** (GPCM) and the **graded response model** (GRM)


### Generalized Partial Credit Model

$$
P(X_{ik} | \theta, a_i, \delta_{ik}) = \frac{exp[\sum^{K_{ik}}_{h=1}a_i(\theta - \delta_{ih})]}{\sum^{m_i}_{c=1} exp[\sum^c_{h=1} a_i (\theta - \delta_{ih})]}
$$

$a_i$ is the discrimination parameter. The thresholds ($\delta_{ik}$) are not restricted to be in the same order.


```{r}
gpcm_mod <- "selfesteem = 1 - 10"
gpcm_fit <- mirt(data = rse[ ,1:10], model = gpcm_mod,
                 itemtype = "gpcm", SE = TRUE)
gpcm_params <- coef(gpcm_fit, IRTpars = TRUE, simplify = TRUE)
gpcm_items <- gpcm_params$items
gpcm_items
```

```{r}
plot(gpcm_fit, type = "trace", which.items = c(6, 8),
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, comlumns = 4))
```
```{r}
plot(gpcm_fit, type = "trace",
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, comlumns = 4))
```

```{r}
plot(gpcm_fit, type = "info", theta_lim = c(-6, 6))
plot(gpcm_fit, type = "SE", theta_lim = c(-6, 6))
```

### Graded Response Model

This model retains the ordering of the response options.

$$
P^*(X_i | \theta, a_i, \delta_{X_i}) = \frac{e^{a_i(\theta - \delta_{x_i})}}{1 +e^{a_i(\theta - \delta_{x_i})} }
$$



```{r}
grm_mod <- "selfesteem = 1 - 10"
grm_fit <- mirt(data = rse[ ,1:10], model = grm_mod,
                itemtype = "graded", SE = TRUE, verbose = FALSE)
grm_params <- coef(grm_fit, IRTpars = TRUE, simplify = TRUE)
grm_items <- grm_params$items
grm_items
```

```{r}
plot(grm_fit, type = "trace", which.items = c(5, 9),
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, comlumns = 4))
```


```{r}
plot(grm_fit, type = "trace",
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, comlumns = 4))
```

```{r}
plot(grm_fit, type = "info", theta_lim = c(-6, 6))
plot(grm_fit, type = "SE", theta_lim = c(-6, 6))
```

## Polytomous IRT Models for Nominal Items

If items do not have ordered response categories, but instead are not ordinal, we do not assume an ordinal transition. This is the case with nominal response categories.

### Nominal Response Model

$$
P(X_{ik}|\theta,\mathbf{a},\gamma) = \frac{e^{\gamma_{ik}+a_{ik}\theta}}{\sum^m_{h=1}e^{\gamma_{ih}+a_{ih}\theta} }
$$

where $\mathbf{a}$ is a vector of item discrimination parameters, and $\gamma$ is a vector of difficulty parameters.

```{r}
nrm_mod <- "agression = 1 - 24"
nrm_fit <- mirt(data = VerbAggWide[ ,4:27], model = nrm_mod,
                itemtype = "nominal", SE = TRUE, verbose = FALSE)
nrm_params <- coef(nrm_fit, IRTpars = TRUE, simlify = TRUE)
nrm_items <- as.data.frame(nrm_params$items)
nrm_items
```

### Nested Logit Model


```{r}
key <- c(4, 3, 2, 3, 4, 3, 2, 3, 1,
           4, 3, 2, 3, 3, 4, 2, 4, 3,
           3, 2, 2, 1, 2, 1, 1, 2, 1)
```

#### 2PL NLM
```{r}
twoplnlm_mod <- "ability = 1 - 27"
twoplnlm_fit <- mirt(data = multiplechoice,
                     model = twoplnlm_mod, itemtype = "2PLNRM",
                     SE = TRUE, key = key, verbose = FALSE)
twoplnlm_params <- coef(twoplnlm_fit, IRTpars = TRUE, simplify = TRUE)
twoplnlm_items <- as.data.frame(twoplnlm_params$items)
head(twoplnlm_items)
```

```{r}
plot(twoplnlm_fit, type = "trace", which.items = c(8, 21),
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```

```{r}
plot(twoplnlm_fit, type = "trace",
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```

#### 3PL NLM


```{r}
threeplnlm_mod <- "ability = 1 - 27"
threeplnlm_fit <- mirt(data = multiplechoice,
                       model = threeplnlm_mod, itemtype = "3PLNRM",
                       SE = TRUE, key = key, verbose = FALSE)
threeplnlm_params <- coef(threeplnlm_fit, IRTpars = TRUE, simplify = TRUE)
threeplnlm_items <- as.data.frame(threeplnlm_params$items)
round(head(threeplnlm_items), 4)
```

```{r}
plot(threeplnlm_fit, type = "trace", which.items = c(1, 17),
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```

```{r}
plot(threeplnlm_fit, type = "trace",
     par.settings = simpleTheme(lty = 1:4, lwd = 2),
     auto.key = list(points = FALSE, lines = TRUE, columns = 4))
```

```{r}
anova(twoplnlm_fit, threeplnlm_fit)
```

